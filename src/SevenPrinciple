单一职责原则：就一个类而言，应该仅有一个引起它变化的原因。
开闭原则：软件实体应该可以扩展，但是不可修改。
里氏替换原则：子类型必须能够替换掉它们的父类型。
依赖倒置原则：A.高层模块不应该依赖底层模块，两个都应该依赖于抽象。
            B.抽象不应该依赖于细节。细节应该依赖于抽象。
迪米特法则：如果两个类不必彼此直接通信，那么这两个类就不应当发生直接的相互作用。如果其中一个雷需要调用另一个类的某一个方法的话，可以通过第三者转发这个调用。
合成/复用原则：尽量使用合成，尽量不要使用类继承。
接口隔离原则：提供尽可能小的接口，而不要提供大的总接口。