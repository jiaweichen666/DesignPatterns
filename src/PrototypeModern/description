定义：运用共享技术有效地支持大量细粒度的对象。
角色：FlyweightFactory（享元工厂用来创建并管理Flyweight的对象。）
      Flyweight（所有具体享元的超类或者接口，通过这个接口，Flyweight可以接受并作用于外部状态）
      ConcreteFlyweight
      UnsharedConcreteFlyweight(指哪些不需要共享的Flyweight子类。因为Flyweight接口共享成为可能，但不强制共享)
享元模式的内部状态与外部状态：在享元对象内部并且不会随着环境改变而改变的共享部分，可以称为是享元对象的内部状态，而随和环境的
改变而改变的，不可以共享的状态就是外部状态了。
享元模式的使用场景：如果一个应用程序中使用了大量的对象，而大量的这些对象造成了很大的存储开销时就应该考虑使用，
                  还有就是对象的大多数状态可以是外部状态，如果删除对象的外部状态，那么可以用相对较少的共享对象取代多组的对象